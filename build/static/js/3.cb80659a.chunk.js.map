{"version":3,"sources":["components/Profile/Profile.module.css","images/avatar.png","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostContainer.jsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Dialogs/Dialogs.module.css","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Post","props","className","style","item","src","avatar","message","likesCount","maxLength10","maxLengthCreator","MyNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","posts","MyPosts","postsElements","postData","map","post","id","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","profile","error","formSummaryError","createField","Input","type","keys","contacts","key","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","photos","large","userAvatar","mainPhoto","target","files","initialValues","formData","then","Profile","ProfileContainer","userId","this","match","params","authoriseduserId","history","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","React","Component","compose","auth","isAuth","withRouter","DialogItem","dialogs","active","to","Message","dialog","maxLengthCreator50","AddMessageFormRedux","Dialogs","dialogsPage","dialogsElements","dialogsData","messagesElements","messagesData","newMessageBody","dialogsItems","messages","sendMessage","sendMessageCreator","withAuthRedirect"],"mappings":"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","file":"static/js/3.cb80659a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPhoto\":\"Profile_mainPhoto__3Bbgw\",\"contact\":\"Profile_contact__1FP5O\",\"formControl\":\"Profile_formControl__LsZtc\",\"error\":\"Profile_error__38Vl4\",\"formSummaryError\":\"Profile_formSummaryError__3xm5V\"};","export default __webpack_public_path__ + \"static/media/avatar.5760d89e.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1rINQ\"};","import style from './Post.module.css';\r\nimport avatar from './../../../../images/avatar.png';\r\nconst Post = (props) => {\r\n    return  (\r\n        <div className={style.item}>\r\n          <img src={avatar} />\r\n          {props.message}\r\n          <div>\r\n            <span>Like {props.likesCount} </span>\r\n          </div>\r\n        </div>\r\n    )\r\n} ;\r\n\r\nexport default Post;\r\n//console.log(Post());","import style from './MyPosts.module.css';\r\nimport Post from './Post/Post'\r\nimport React from 'react';\r\nimport {addPostActionCreator,updateNewPostTextActionCreator} from './../../redux/profile-reducer'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../util/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = (props) => {\r\n\r\n  let postsElements = props.postData\r\n  .map(post => <Post key={post.id} message={post.message} likesCount={post.likesCount} />)\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n  let onAddPost = (values) => {\r\n    //alert(values + 'buttonclick')\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n\r\n    return  (\r\n    <div>\r\n      <h3>My posts</h3>\r\n      <MyNewPostFormRedux onSubmit={onAddPost} />\r\n      <div>{postsElements}</div>\r\n    </div>\r\n    )\r\n} ;\r\n\r\nconst MyNewPostForm = (props) =>{\r\n  return (<form onSubmit={props.handleSubmit}>\r\n        <div>\r\n        <Field  name='newPostText' \r\n        component={Textarea}\r\n        placeholder={\"\"}\r\n        validate={[required, maxLength10]}\r\n        />\r\n        <div>\r\n          <button>Add</button>\r\n        </div>\r\n      </div>\r\n      <div className={style.posts}>\r\n      </div>\r\n  </form>\r\n  )\r\n}\r\n\r\nlet MyNewPostFormRedux = reduxForm({form:'ProfileMyNewPostForm'})(MyNewPostForm)\r\n\r\nexport default MyPosts;","import style from './MyPosts.module.css';\r\nimport Post from './Post/Post'\r\nimport React from 'react';\r\nimport {addPostActionCreator} from '../../redux/profile-reducer'\r\nimport MyPosts from './MyPosts';\r\n//import StoreContext from '../../../StoreComponent';\r\nimport { connect } from 'react-redux';\r\n\r\n// const MyPostsContainer = () => {\r\n//   // let state = props.store.getState();\r\n//     return  (\r\n//       <StoreContext.Consumer>\r\n//         {\r\n//         (store) => {\r\n//           let state = store.getState();\r\n//           let addPost = () => {\r\n//             store.dispatch(addPostActionCreator());\r\n//           }\r\n        \r\n//           let onPostChange = (text) =>{\r\n//             let action = updateNewPostTextActionCreator(text);\r\n//             store.dispatch(action);\r\n//           }\r\n\r\n//         return <MyPosts  updateNewPostText={onPostChange} \r\n//           addPost={addPost} \r\n//           postData={state.profilePage.postData}\r\n//           newPostText={state.profilePage.newPostText}/>\r\n//           }\r\n//         }   \r\n//          </StoreContext.Consumer>\r\n//     )\r\n// } ;\r\n\r\nlet mapStateToProps = (state) =>{\r\n  return {\r\n    postData: state.profilePage.postData,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n  return {\r\n      addPost: (newPostText) => {\r\n        dispatch(addPostActionCreator(newPostText));\r\n      }\r\n\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps) (MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect, useState } from 'react'\r\n\r\n\r\n const   ProfileStatusWithHooks = (props) => {\r\n\r\n    let  [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect ( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () =>  {\r\n        setEditMode(false);\r\n\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div >\r\n                    <b>Status: </b><span \r\n                   \r\n                   onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n                <div >\r\n                    <input \r\n                    onChange={onStatusChange}\r\n                    autoFocus={true}\r\n                    onBlur={deactivateEditMode} \r\n                    value={status}  />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n }\r\n\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { createField, Input, Textarea } from '../../common/FormsControls/FormsControls';\r\nimport style from './../Profile.module.css'\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error }) => {\r\n    return <form onSubmit={handleSubmit}>\r\n                <div><button >save</button></div> \r\n                { error && <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n                }\r\n            <div>\r\n                <b>Full name</b>: {createField(\"Full name\",\"fullName\",[],Input)}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>:  {createField(\"\",\"lookingForAJob\",[],Input,{type : \"checkbox\"})}\r\n            </div>\r\n\r\n            <div>\r\n                <b>My professionals skills</b>: \r\n                 {createField(\"My professionals skills\",\"lookingForAJobDescription\",[],Textarea)}\r\n            </div>\r\n\r\n            <div>\r\n                <b>About me</b>  :\r\n                {createField(\"About me\", \"aboutMe\",[],Textarea )}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                    return <div key={key} className={style.contact}>\r\n                        <b>{key}: {createField(key,\"contacts.\" + key, [], Input)}</b>\r\n                    </div>\r\n                })}\r\n            </div>\r\n</form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm ({form: 'edit-profile'}) (ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userAvatar from './../../../assets/images/avatar.png' \r\nimport style from './../Profile.module.css'\r\nimport { useState } from 'react';\r\nimport ProfileDataForm from './ProfileDataForm'\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let  [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile){\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) =>{\r\n       if(e.target.files.length){\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) =>{\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        );\r\n        \r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <div>  \r\n                {/*<img src={motorstorm} alt='motor' />*/}\r\n            </div>\r\n            <div>\r\n                <img src={profile.photos.large || userAvatar} className={style.mainPhoto}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n\r\n                {editMode \r\n                ? <ProfileDataForm initialValues={profile} profile={profile}  onSubmit={onSubmit}/> \r\n                : <ProfileData goToEditMode={() => {setEditMode(true)}} profile={profile} isOwner={isOwner} />}\r\n                \r\n                <ProfileStatusWithHooks \r\n                status={status} \r\n                updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n  )\r\n} ;\r\n\r\nconst ProfileData = ({profile,isOwner,goToEditMode}) => {\r\n    return <div>\r\n        <div>\r\n        {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n        </div>\r\n    <div>\r\n        <b>Full name</b> : {profile.fullName}\r\n        \r\n    </div>\r\n    <div>\r\n        <b>Looking for a job</b> : {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n    </div>\r\n    {profile.lookingForAJob &&\r\n    <div>\r\n        <b>My professionals skills</b>  {profile.lookingForAJobDescription}\r\n       \r\n    </div>\r\n    }\r\n    <div>\r\n        <b>About me</b> :{profile.aboutMe}\r\n       \r\n    </div>\r\n    <div>\r\n        <b>Contacts</b> :{Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n        })}\r\n    </div>\r\n</div>\r\n}\r\n\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={style.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","//import motorstorm from './../../images/motorstorm.jpeg';\r\n//import MyPosts from './MyPosts/MyPosts';\r\nimport MyPostsContainer from './MyPosts/MyPostContainer';\r\n//import style from './Profile.module.css';\r\nimport ProfileInfo from'./ProfileInfo/ProfileInfo';\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n  <div >\r\n      <ProfileInfo \r\n      savePhoto={props.savePhoto}\r\n      isOwner={props.isOwner}\r\n      profile={props.profile}  \r\n      status={props.status} \r\n      updateStatus={props.updateStatus}\r\n      saveProfile={props.saveProfile}\r\n      />\r\n      <MyPostsContainer  />\r\n  </div>\r\n  )\r\n} ;\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from'./Profile';\r\nimport * as axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile,getStatus,updateStatus, savePhoto,saveProfile } from '../redux/profile-reducer'\r\nimport {Redirect, withRouter} from 'react-router-dom';\r\nimport { usersAPI } from '../../api/api';\r\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId){\r\n      userId = this.props.authoriseduserId;\r\n      if (!userId){\r\n         this.props.history.push(\"/login\")\r\n     }\r\n    }\r\n this.props.getUserProfile(userId);\r\n this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.refreshProfile();\r\n}\r\n\r\ncomponentDidUpdate(prevProps, prevState, snapshot){\r\n  if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n    this.refreshProfile();\r\n  }\r\n  \r\n}\r\n    render() {\r\n     \r\n        return (\r\n          <Profile  {...this.props} \r\n          isOwner={!this.props.match.params.userId}\r\n          profile={this.props.profile} \r\n          status={this.props.status} \r\n          updateStatus={this.props.updateStatus}\r\n          savePhoto={this.props.savePhoto}\r\n          />\r\n        )\r\n      }\r\n} ;\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authoriseduserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n\r\n});\r\n\r\nexport default compose (\r\n  connect (mapStateToProps, {getUserProfile,getStatus,updateStatus,savePhoto,saveProfile}),\r\n  withRouter,\r\n  //withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__26EQn\",\"dialogsItems\":\"Dialogs_dialogsItems__1qwd_\",\"active\":\"Dialogs_active__1DegZ\",\"messages\":\"Dialogs_messages__32fAl\"};","import React from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport avatar from './../../images/avatar.png';\r\nimport style from './Dialogs.module.css';\r\nimport {sendMessageCreator,updateNewMessageBodyCreator} from '../../components/redux/dialogs-reducer'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../util/validators/validators';\r\n\r\n\r\nconst DialogItem = (props) =>{\r\n    return (\r\n        <div className={style.dialogs + \" \" + style.active}>\r\n        <img src={avatar} />\r\n        <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n       </div>\r\n    )\r\n}\r\n\r\nconst Message = (props) =>{\r\n\r\n\r\n\r\n    return (\r\n        <div className={style.dialog}>{props.message}</div>\r\n    )\r\n}\r\n\r\nconst Dialogs = (props) =>{\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let newMessageElement = React.createRef();\r\n\r\n    let addMessage = () =>{\r\n        let text = newMessageElement.current.value;\r\n        alert(text);\r\n    }\r\n\r\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} id={dialog.id} key={dialog.id} /> );\r\n    let messagesElements = state.messagesData.map(message => <Message message={message.message} id={message.id} key={message.id} /> );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'} /> ;\r\n    return (\r\n        <div className={style.dialogs}>\r\n           <div className ={style.dialogsItems}>\r\n                {dialogsElements}\r\n           </div>\r\n           <div className ={style.messages}>\r\n           {messagesElements}\r\n                \r\n           </div>\r\n           <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLengthCreator50 = maxLengthCreator(50)\r\nconst AddMessageForm =(props) =>{\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n        <div> \r\n            <Field component={Textarea} \r\n            name='newMessageBody' \r\n            placeholder='Enter your message'\r\n            validate={[required,maxLengthCreator50]}\r\n            />\r\n        </div>\r\n        <div><button >Send</button></div>\r\n   </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogsAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\n//import avatar from './../../images/avatar.png';\r\n//import style from './Dialogs.module.css';\r\nimport {sendMessageCreator} from '../redux/dialogs-reducer'\r\nimport Dialogs from './Dialogs'\r\nimport StoreContext from '../../StoreComponent';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\r\nimport ProfileContainer from '../Profile/ProfileContainer';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        sendMessage : (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose (\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}